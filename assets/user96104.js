import{b as r,f as n,g as i,d as u}from"./usetoast.esm96104.js";class t{static async fetchAll(e){return(await r("/users",e)).data}static async getUserDetail(e){return(await r(`/users/${e}`)).data.user}static async createUser(e){return(await n("/users",e)).data.user}static async disableUser(e){return(await r(`/users/${e}/disable`)).data}static async enableUser(e){return(await r(`/users/${e}/enable`)).data}static async updateUser(e){return(await i(`/users/${e.user.id}`,e)).data.user}static async changePassword(e){return(await n(`/users/${e.user.id}/change_password`,e)).data.user}static async fetchAllAdmin(e){return(await r("/admins",e)).data}static async createUserAdmin(e){return(await n("/admins",e)).data.user}static async disableUserAdmin(e){return(await r(`/admins/${e}/disable`)).data}static async enableUserAdmin(e){return(await r(`/admins/${e}/enable`)).data}static async updateUserAdmin(e){return(await i(`/admins/${e.user.id}`,e)).data.user}}const o=u({id:"user",state:()=>({user:{},users:[],response_users:{},total_users:Number}),getters:{allUsers:s=>s.response_users.users,responseUsers:s=>s.response_users,getTotalUsers:s=>s.response_users?s.response_users.total:0,getCurrentUser:s=>s.user,userRoles:()=>[{name:"User",value:"user"},{name:"Agent",value:"agent"},{name:"Distributor",value:"dealer"}],userAdminRoles:()=>[{name:"Vendor",value:"vendor"},{name:"Admin",value:"admin"},{name:"Super admin",value:"super_admin"}]},actions:{async fetchAllUsers(s){await t.fetchAll(s).then(e=>this.response_users=e)},async fetchUserDetail(s){await t.getUserDetail(s).then(e=>this.user=e)},async createUser(s){await t.createUser(s).then(e=>this.user=e)},async updateUser(s){await t.updateUser(s).then(e=>this.user=e)},async disableUser(s,e){e?await t.enableUser(s).then(a=>this.user=a):await t.disableUser(s).then(a=>this.user=a)},async changePassword(s){await t.changePassword(s).then(e=>this.user=e)},async fetchAllAdminUsers(s){await t.fetchAllAdmin(s).then(e=>this.response_users=e)},async createUserAdmin(s){await t.createUserAdmin(s).then(e=>this.user=e)},async updateUserAdmin(s){await t.updateUserAdmin(s).then(e=>this.user=e)},async disableUserAdmin(s,e){e?await t.enableUserAdmin(s).then(a=>this.user=a):await t.disableUserAdmin(s).then(a=>this.user=a)}}});export{o as u};
