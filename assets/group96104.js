import{b as u,f as p,h as a,g as n,i,d as g}from"./usetoast.esm96104.js";class o{static async fetchAll(e){return(await u("/user_groups",e)).data}static async getGroupDetail(e){return(await u(`/user_groups/${e}`)).data.user_groups}static async createGroup(e){return(await p("/user_groups",e)).data.user_group}static async deleteGroup(e){return(await a(`/user_groups/${e}`)).data}static async updateGroup(e){return(await n(`/user_groups/${e.user_group.id}`,e)).data.user_group}static async addUserToGroup(e){const r=e.group_id;return delete e.group_id,(await p(`/user_groups/${r}/add_user`,e)).data.user_group}static async deleteUserFromGroup(e){const r=e.group_id;return delete e.group_id,(await a(`/user_groups/${r}/remove_user/${e.user_group.user_id}`,e)).data.user_group}static async importUsersToGroup(e){const r=e.group_id;return delete e.group_id,(await i(`/user_groups/${r}/import_users`,e.formData)).data.user_group}}const d=g({id:"group",state:()=>({group:{},groups:[],response_groups:{},total_groups:Number}),getters:{allGroups:s=>s.response_groups.user_groups,responseGroups:s=>s.response_groups,getTotalGroups:s=>s.response_groups?s.response_groups.total:0,getCurrentGroup:s=>s.group},actions:{async fetchAllGroups(s){await o.fetchAll(s).then(e=>this.response_groups=e)},async fetchGroupDetail(s){await o.getGroupDetail(s).then(e=>this.group=e)},async createGroup(s){await o.createGroup(s).then(e=>this.group=e)},async updateGroup(s){await o.updateGroup(s).then(e=>this.group=e)},async deleteGroup(s){await o.deleteGroup(s).then(e=>this.group=e)},async addUserToGroup(s){await o.addUserToGroup(s).then(e=>this.group=e)},async deleteUserFromGroup(s){await o.deleteUserFromGroup(s).then(e=>this.group=e)},async importUsersToGroup(s){await o.importUsersToGroup(s)},updateResponseGroup(s){this.response_groups=Object.assign([],s)}}});export{d as u};
