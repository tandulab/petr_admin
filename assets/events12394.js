import{ae as a,ar as r,aq as o,ad as v}from"./usetoast.esm12394.js";class n{static async fetchAll(e){return(await a("/events",e)).data}static async getEventsDetail(e){return(await a(`/events/${e}`)).data.event}static async createEvents(e){return(await r("/events",e.formData)).data.events}static async deleteEvents(e){return(await o(`/events/${e}`)).data}static async updateEvents(e){return(await r(`/events/${e.id}/update`,e.formData)).data.events}static async sendPush(e){return(await a(`/events/${e}/send_notification`)).data}static async downloadBooking(e){return(await a(`/events/${e}/download_bookings`)).data}}const c=v({id:"events",state:()=>({event:{},events:[],response_events:{},total_events:Number}),getters:{allEvents:t=>t.response_events.events,responseEvents:t=>t.response_events,getTotalEvents:t=>t.response_events?t.response_events.total:0,getCurrentEvent:t=>t.event,eventsStatus:()=>[{name:"Online",value:"online"},{name:"Draft",value:"draft"},{name:"Archived",value:"archived"}]},actions:{async fetchAllEvents(t){await n.fetchAll(t).then(e=>this.response_events=e)},async fetchEventsDetail(t){await n.getEventsDetail(t).then(e=>this.event=e)},async createEvents(t){await n.createEvents(t).then(e=>this.event=e)},async updateEvents(t){await n.updateEvents(t).then(e=>this.event=e)},async deleteEvents(t){await n.deleteEvents(t).then(e=>this.event=e)},async sendPush(t){await n.sendPush(t)}}});export{c as u};
