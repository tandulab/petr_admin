import{aa as t,ad as n,ae as i,a9 as u}from"./usetoast.esm40966.js";class r{static async fetchAll(s){return(await t("/users",s)).data}static async getUserDetail(s){return(await t(`/users/${s}`)).data.user}static async createUser(s){return(await n("/users",s)).data.user}static async disableUser(s){return(await t(`/users/${s}/disable`)).data}static async enableUser(s){return(await t(`/users/${s}/enable`)).data}static async updateUser(s){return(await i(`/users/${s.user.id}`,s)).data.user}static async changePassword(s){return(await n(`/users/${s.user.id}/change_password`,s)).data.user}static async resetPassword(s){return(await n("/users/password_recovery",s)).data.user}static async fetchAllAdmin(s){return(await t("/admins",s)).data}static async createUserAdmin(s){return(await n("/admins",s)).data.user}static async disableUserAdmin(s){return(await t(`/admins/${s}/disable`)).data}static async enableUserAdmin(s){return(await t(`/admins/${s}/enable`)).data}static async updateUserAdmin(s){return(await i(`/admins/${s.user.id}`,s)).data.user}}const c=u({id:"user",state:()=>({user:{},users:[],response_users:{},total_users:Number}),getters:{allUsers:e=>e.response_users.users,responseUsers:e=>e.response_users,getTotalUsers:e=>e.response_users?e.response_users.total:0,getCurrentUser:e=>e.user,userRoles:()=>[{name:"Workshop",value:"user"},{name:"Agent",value:"agent"},{name:"Distributor",value:"dealer"}],userAdminRoles:()=>[{name:"Vendor",value:"vendor"},{name:"Admin",value:"admin"},{name:"Super admin",value:"super_admin"}]},actions:{async fetchAllUsers(e){await r.fetchAll(e).then(s=>this.response_users=s)},async fetchUserDetail(e){await r.getUserDetail(e).then(s=>this.user=s)},async createUser(e){await r.createUser(e).then(s=>this.user=s)},async updateUser(e){await r.updateUser(e).then(s=>this.user=s)},async disableUser(e,s){s?await r.enableUser(e).then(a=>this.user=a):await r.disableUser(e).then(a=>this.user=a)},async changePassword(e){await r.changePassword(e).then(s=>this.user=s)},async resetPassword(e){await r.resetPassword(e).then(s=>this.user=s)},async fetchAllAdminUsers(e){await r.fetchAllAdmin(e).then(s=>this.response_users=s)},async createUserAdmin(e){await r.createUserAdmin(e).then(s=>this.user=s)},async updateUserAdmin(e){await r.updateUserAdmin(e).then(s=>this.user=s)},async disableUserAdmin(e,s){s?await r.enableUserAdmin(e).then(a=>this.user=a):await r.disableUserAdmin(e).then(a=>this.user=a)}}});export{c as u};
